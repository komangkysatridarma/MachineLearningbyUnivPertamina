# -*- coding: utf-8 -*-
"""Salinan dari DeepFace-PengMas.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12HFeZYTLXrv8G62BN0MDAmkawMaQUcCE
"""

!pip install deepface

!pip install matplotlib

!pip install opencv-python

from deepface import DeepFace
import cv2
import os
import matplotlib.pyplot as plt
import pandas as pd

from google.colab import drive
drive.mount('/content/drive')

models = ["VGG-Face", "Facenet", "OpenFace", "DeepFace", "DeepID", "Dlib", "ArcFace"]

img1 = "/content/drive/MyDrive/banding/mike.jpeg"

image = DeepFace.detectFace(img1)

plt.imshow(image)

df = DeepFace.find(img_path=img1, db_path = '/content/drive/MyDrive/banding', model_name = models[0], enforce_detection=False)

df

def load_images_from_folder(folder):
    images = []
    for filename in os.listdir(folder):
        img = cv2.imread(os.path.join(folder,filename))   # ubah ini jadi find
        if img is not None:
            images.append(img)
    return images

"""
*   Load image dari folder
*   find image dari dataset
*   verify image hasil find dengan target
*   hitung akurasi (correct/total)

"""

images = load_images_from_folder("/content/drive/MyDrive/Testing")

images

def verify(img1_path,img2_path, model_name):
    img1= cv2.imread(img1_path)
    img2= cv2.imread(img2_path)

    plt.imshow(img1[:,:,::-1])
    plt.show()
    plt.imshow(img2[:,:,::-1])
    plt.show()

    output = DeepFace.verify(img1_path,img2_path, model_name=model_name)
    print(output)

    verification = output['verified']

    if verification:
       print('Benar')
    else:
       print('Salah')

verify("/content/drive/MyDrive/banding/mike.jpeg","/content/drive/MyDrive/banding/mikee.jpeg", model_name = models[0])